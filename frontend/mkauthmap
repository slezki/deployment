#!/usr/bin/env python
"""mkauthmap -c url.conf -c CONFIGFILE -o FILE
Queries CRIC roles .json and put it into /data/srv/state/frontend/etc/
"""

import os, subprocess, sys
from traceback import format_exc
import urllib2, os, os.path, re
from urllib2 import Request, urlopen, URLError
from optparse import OptionParser
from tempfile import mkstemp
from shutil import copyfile
from urlparse import urlsplit, urlunparse
from pprint import pprint #to debug objects content

#Global vars
opts = ''
args = ''
roles = '' 

def ls_command(file):
  command = "ls -lash " + opts.out
  p = subprocess.Popen(command, stdout=subprocess.PIPE, shell=True)
  stdout = p.communicate()[0]
  return stdout

def getFecthDetails(file):
  nline = 0
  for line in open(file,"r"):
   nline += 1
   m = re.match(r"^url (cric?:\S+)$", line)
  if not m:
    print "%s: %d: line not understood" % (file, nline)
    sys.exit(1)
  ml  =  m.group(1)
  url =  ml[5:]
  return url

def request(uri):
  content = ''
  url = "http:" + uri
  (scheme, netloc, path, query, frag) = urlsplit(url)
  query = "json&preset=" +query
  path = "/accounts/user" + path
  req = urllib2.Request(urlunparse((scheme, netloc, path, '', query, frag)))
  try:
    result = urllib2.urlopen(req)
  except URLError, e:
    if hasattr(e, 'reason'):
      print 'Failed to reach a server. Reason: '
      pprint(e.reason)
    elif hasattr(e, 'code'):
      print 'The server couldn\'t fulfill the request. Error code: '
      pprint(e.code)
  else:
      content = result.read()
  return content

def diffFiles(file1, file2):
  rlist = []
  rcode = -1
  try:
    command = "diff " + file1 + " " + file2
    p = subprocess.Popen(command, stdout=subprocess.PIPE, shell=True)
    stdout = p.communicate()[0]
    rcode = p.returncode
    rlist.append(rcode)
    rlist.append(stdout)
  except(IOError, OSError) as e: 
      print "An error ocurred:"
      pprint(e)
  return rlist

def updateFile(opts, roles):
  if roles:
    try:
      fd, tmpname= mkstemp(dir = os.path.dirname(opts.out))
      tmpfile = os.fdopen(fd, "w")
      tmpfile.write(roles)
      tmpfile.close()
    except(IOError, OSError) as e: 
      print "An error ocurred:"
      pprint(e)
    try:
      if os.path.exists(tmpname) and os.path.getsize(tmpname) > 0:#Ensuring that file exits and is not empty
        d_ff = diffFiles(tmpname,opts.out)
        diff = d_ff[0]
        if (diff == 0):#fetched content have not changed
          try:
            os.remove(tmpname)
          except(IOError, OSError) as e:
            print "An error ocurred:"
            pprint(e)
        elif(diff == -1):#something wrong was with diff function
          try:
            os.remove(tmpname)
          except(IOError, OSError) as e:
            print 'An error ocurred: '
            pprint(e)
          exit(1) 
        else:#fetched content have changed
          try:
            command = "cp " + tmpname + " " + opts.out
            p = subprocess.Popen(command, stdout=subprocess.PIPE, shell=True)
            stdout = p.communicate()[0]
            #print to know if the json have being updated
            print "Info: json was updated"
            print "DIFF OUTPUT: "
            pprint(d_ff[1])
            os.remove(tmpname)
          except(IOError, OSError) as e:
            print 'An error ocurred: '
            pprint(e)
    except(IOError, OSError) as e:
      print "An error ocurred"
      pprint(e)
  else:
    print "Fetched contend empty. Below last time that file was updated:"
    print ls_command(opts.out)

##Main
#Getting command line options
opt = OptionParser(__doc__)
opt.add_option("-c", "--conf", dest="conf", metavar="FILE", help="configuration file")
opt.add_option("-o", "--out", dest="out", metavar="FILE", help="output file")
opts, args = opt.parse_args()
#Checking command line options
if not opts.conf:
   print >> sys.stderr, "Config file name file is required"
   exit(1)

if not opts.out:
   print >> sys.stderr, "Output file name is required"
   exit(1)

##Calling core functions
uri = getFecthDetails(opts.conf)
content = request(uri)
updateFile(opts, content)
exit(0)
